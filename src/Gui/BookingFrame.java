package Gui;

import Database.DBAirport;
import Database.DBException;
import Database.DBRoute;
import Logic.Airport;
import Logic.Route;
import Logic.TravelAgency;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author kiren
 */
public class BookingFrame extends javax.swing.JFrame {

    /**
     * Creates new form BookingFrame
     */
    public BookingFrame() throws DBException {
        initComponents();
        this.UpdateCombo(); //methode om de combobox te vullen met de luchthavens in de database. ( zie beneden)
    }

    public void UpdateCombo() throws DBException {   // methode om de combobox te vullen met de luchthavens in de database. 
        ArrayList<Airport> airports = TravelAgency.getAirports();
        String item = "";
        for (int i = 0; i < airports.size(); i++) {
            item = "\n'" + airports.get(i).getAirportCode() + "\', ";
            item = item + airports.get(i).getCity();
            this.Origin1.addItem(item);
            this.Destination.addItem(item);
        }
    }

    public void close() {
        WindowEvent winClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jToolBar1 = new javax.swing.JToolBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        Originlabel = new javax.swing.JLabel();
        DestinationLabel = new javax.swing.JLabel();
        Date = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        Destination = new javax.swing.JComboBox<>();
        SearchButton = new javax.swing.JButton();
        GoToHomescreenButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Criteria = new javax.swing.JComboBox<>();
        Origin1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        NumberOfPersons = new javax.swing.JComboBox<>();
        jCheckBox1 = new javax.swing.JCheckBox();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", " ", " " }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jToolBar1.setRollover(true);

        jMenu1.setText("jMenu1");

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Originlabel.setBackground(new java.awt.Color(0, 255, 204));
        Originlabel.setText("Origin:");

        DestinationLabel.setText("Destination:");

        Date.setText("Departure Date:");

        Destination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DestinationActionPerformed(evt);
            }
        });

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        GoToHomescreenButton.setText("Go Back To HomeScreen!");
        GoToHomescreenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoToHomescreenButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Search criteria");

        Criteria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Duration", "Number Of Transfers", "Price", "CO2 emission" }));
        Criteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CriteriaActionPerformed(evt);
            }
        });

        Origin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Origin1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Numbers Of People");

        NumberOfPersons.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9" }));
        NumberOfPersons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumberOfPersonsActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Everybody is registred");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DestinationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Date)
                                    .addComponent(Originlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Destination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Origin1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(40, 40, 40)
                                    .addComponent(Criteria, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(NumberOfPersons, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(102, 102, 102))))
                        .addContainerGap(91, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(GoToHomescreenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GoToHomescreenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Originlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Origin1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DestinationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Destination, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Criteria, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NumberOfPersons, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 6, Short.MAX_VALUE)
                        .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void DestinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DestinationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DestinationActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed

        String origin = (String) this.Origin1.getSelectedItem();
        String destination = (String) this.Destination.getSelectedItem();
        int numberOfCustomers = Integer.parseInt((String) this.NumberOfPersons.getSelectedItem());
        String originCode = origin.substring(2, 5);
        String destCode = destination.substring(2, 5);

        Date datum = this.jDateChooser1.getDate();
        int dag = 32;// nodig om de mogelijke errors op te vangen
        try {
            dag = datum.getDay();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Fill in the date field");
        }

        Date Today = new Date();
        String Criteria = (String) this.Criteria.getSelectedItem();

        if ((origin == null || destination == null || datum == null) && (32 != dag)) {
            JOptionPane.showMessageDialog(null, "Please fill in all fields");
        } else if ((origin.equals(destination) && (32 != dag))) {
            JOptionPane.showMessageDialog(null, " \"Origin\"  and \"destination\" have to be different!");
        } else if ((32 != dag && datum.before(Today))) {
            JOptionPane.showMessageDialog(null, "You are only allowed to book flights for future dates!");
        } else if (32 != dag) {

            Airport oAirport = null;
            try {
                oAirport = DBAirport.getAirport(originCode); // het moet een methode met een airport naam
            } catch (DBException ex) {
                Logger.getLogger(BookingFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            Airport aAirport = null;
            try {
                aAirport = DBAirport.getAirport(destCode);  // het moet een methode met een airport naam
            } catch (DBException ex) {
                Logger.getLogger(BookingFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

            ArrayList<Route> routes = new ArrayList<Route>();
            try {
                routes = DBRoute.getRoutesFromTo(oAirport, aAirport);
            } catch (DBException ex) {
                Logger.getLogger(BookingFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (Criteria.equals("Duration")) {
                routes.sort(Comparator.comparing(Route::getRouteDuration));
            } else if (Criteria.equalsIgnoreCase("Price")) {
                routes.sort(Comparator.comparingDouble(Route::getRoutePrice));
            } else if (Criteria.equalsIgnoreCase("Number Of Transfers")) {
                routes.sort(Comparator.comparing(Route::getNumberOfTransfers));
            } else if (Criteria.equalsIgnoreCase("CO2 emision")) {
                routes.sort(Comparator.comparing(Route::getTotalEmission));
            }
            if ((32 != dag) && routes.size() == 0) {
                JOptionPane.showMessageDialog(null, "No Flights available between"
                        + origin.substring(7) + " and" + destination.substring(7) + "!");
            } else if (this.jCheckBox1.isSelected()) {

                LocalDate date = datum.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

                SelectFlightFrame j = new SelectFlightFrame(routes, date, numberOfCustomers);
                j.setVisible(true);

                this.hide();

            } else {
                LocalDate date = datum.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                AddFromSelectFlight j = new AddFromSelectFlight(routes, date, numberOfCustomers);
                j.setVisible(true);
                this.hide();

            }
        }
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void GoToHomescreenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoToHomescreenButtonActionPerformed
        HomeScreen j = new HomeScreen();
        j.setVisible(true);
        this.hide();
    }//GEN-LAST:event_GoToHomescreenButtonActionPerformed

    private void CriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CriteriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CriteriaActionPerformed

    private void Origin1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Origin1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Origin1ActionPerformed

    private void NumberOfPersonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumberOfPersonsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumberOfPersonsActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new BookingFrame().setVisible(true);
                } catch (DBException ex) {
                    Logger.getLogger(BookingFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Criteria;
    private javax.swing.JLabel Date;
    private javax.swing.JComboBox<String> Destination;
    private javax.swing.JLabel DestinationLabel;
    private javax.swing.JButton GoToHomescreenButton;
    private javax.swing.JComboBox<String> NumberOfPersons;
    private javax.swing.JComboBox<String> Origin1;
    private javax.swing.JLabel Originlabel;
    private javax.swing.JButton SearchButton;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JToolBar jToolBar1;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    // End of variables declaration//GEN-END:variables
}
